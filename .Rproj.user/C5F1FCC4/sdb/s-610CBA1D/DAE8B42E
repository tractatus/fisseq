{
    "collab_server" : "",
    "contents" : "#include <Rcpp.h>\nusing namespace Rcpp;\n\n#include <libics.h>\n\nRcppExport SEXP readICS(SEXP input, SEXP outputfolder, SEXP outname, SEXP kernel, SEXP display,  SEXP outputfile, SEXP writetoconsole) {\n  BEGIN_RCPP\n  Rcpp::RNGScope __rngScope;\n\n  ICS* ip;\n  Ics_DataType dt;\n  int ndims;\n  size_t dims[ICS_MAXDIM];\n  size_t bufsize;\n  void* buf;\n  Ics_Error retval;\n\n  retval = IcsOpen (&ip, \"file.ics\", \"r\");\n  if (retval != IcsErr_Ok)\n  /* Flag error condition */ ;\n\n  IcsGetLayout (ip, &dt, &ndims, dims);\n  bufsize = IcsGetDataSize (ip);\n  buf = malloc (bufsize);\n  if (buf == NULL)\n  /* Flag error condition*/ ;\n  retval = IcsGetData (ip, buf, bufsize);\n  if (retval != IcsErr_Ok)\n  /* Flag error condition */ ;\n\n/*\n * There are some other functions available to get\n * more info on the image in the .ics file.\n */\n\n  retval = IcsClose (ip);\n  if (retval != IcsErr_Ok)\n  /* Flag error condition*/ ;\n  END_RCPP\n}\n",
    "created" : 1476129109127.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1157867579",
    "id" : "DAE8B42E",
    "lastKnownWriteTime" : 1476131457,
    "last_content_update" : 1476131457333,
    "path" : "~/GitHub/fisseq/src/readICS.cpp",
    "project_path" : "src/readICS.cpp",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "cpp"
}